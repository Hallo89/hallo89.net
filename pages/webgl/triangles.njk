<!DOCTYPE html>
<html lang="en" dir="ltr">
  <head>
    {% include 'pages/templates/common-head.njk' %}
    <title>Triangles - WebGL experiments | Hallo89</title>
    <style>
      .input_box.colors {
        margin: 10px 5px 0;
      }

      .input_box.rgb .number_wrapper:nth-child(2) {
        margin: 0 5px;
      }
      .input_box.rgb .input {
        width: 59px;
      }

      .input_box.colorpicker .input {
        width: 100px;
        padding: 4px;
      }

      .input_box.hex {
        margin-right: 8px;
      }

      .input_box.dimensions {
        display: flex;
        flex-direction: row;
      }
      .input_box.dimensions .input_header {
        white-space: nowrap;
      }
      .input_box.dimensions .box_wrapper {
        overflow: hidden;
        transition: all .4s ease;
        margin: 0;
        animation: none;
      }
      .input_box.dimensions .input {
        width: 100%;
      }
      .input_box.dimensions .crement {
        transition: all .3s ease;
      }

      .box_wrapper.size {
        width: 100px;
      }

      .inputs_expander {
        position: absolute;
        top: 0;
        width: 100%;
        height: 65px;
        z-index: 1;
      }

      #size_alert .buttons button.yes {
        font-weight: bold;
        width: calc(3.3vw + 130px);
        height: calc(3.8vh + 15px);
        min-height: 30px;
        min-width: 120px;
      }
      #size_alert .buttons button.abort {
        background-color: hsl(0, 0%, 24%);
        color: hsl(0, 0%, 70%);
        font-size: 18px;
        width: calc(4vw + 45px);
        height: 3.5vh;
        min-height: 25px;
        min-width: 100px;
        margin-top: calc(1.7vh + 3px);
      }

      .tooltips {
        position: absolute;
        right: 0;
        bottom: 25%;
        font-size: calc(.2vw + .1vh + 13.3px);
        color: hsl(0, 0%, 58%);
      }
      .tooltips .tip_wrapper {
        width: calc(10vw + 330px);
        background-color: hsl(0, 0%, 16%);
        overflow: hidden;
        transform: translateX(100%);
        visibility: hidden;
        opacity: .8;
        animation: .27s preventHidden linear;
        transition: transform .27s cubic-bezier(.28,0,0,1), opacity .2s ease;
      }
      .tooltips .tip_wrapper.active {
        visibility: visible;
        opacity: 1;
        animation: none;
        transform: translateX(0);
      }
      .tooltips .tip_wrapper.active .tip_inner {
        transform: translateX(0);
      }
      .tooltips .tip_wrapper.active .tip_header, .tooltips .tip_wrapper.active .tip_description {
        transform: translateX(0);
      }
      .tooltips .tip_inner {
        padding: 8px 7px 8px 14px;
        background-color: hsl(0, 0%, 10%);
        transition: transform .31s .04s cubic-bezier(.29,.08,.05,1);
        transform: translateX(100%);
      }
      .tooltip .tip_text {
        transition: transform .36s .08s cubic-bezier(.30,.13,.1,1);
        transform: translateX(100%);
      }
      .tooltips .tip_text.tip_header {
        font-size: 1.2em;
        font-weight: bold;
        margin-bottom: 4px;
        color: hsl(0, 0%, 65%);
      }
      .tooltips .tip_text.tip_description {
        font-family: 'Consolas', 'San Francisco Monospaced', monospace;
      }

      .visually-hidden {
        position: absolute;
        height: 1px;
        width: 1px;
        overflow: hidden;
        clip: rect(1px, 1px, 1px, 1px);
        white-space: nowrap;
      }

      @keyframes preventHidden {
        from { visibility: visible; }
        to   { visibility: visible; }
      }

    </style>
    <link rel="stylesheet" href="/style/webgl/base.css">
    <link rel="stylesheet" href="/style/global.css">
  </head>
  <body class="expanded">
    <div class="toolbar">
      <div class="inputs">
        <div class="input_box colors colorpicker">
          <input type="color" value="#17469E" class="input color">
          <span class="input_header">Color picker</span>
        </div>
        <div class="input_box colors rgb">
          <div class="input_wrapper">
            <div class="number_wrapper">
              <input type="number" value="23" max="255" min="0" class="input number rgb r">
              <div class="crement_buttons small">
                <button class="crement plus noselect">▲</button>
                <button class="crement minus noselect">▼</button>
              </div>
            </div>
            <div class="number_wrapper">
              <input type="number" value="70" max="255" min="0" class="input number rgb g">
              <div class="crement_buttons small">
                <button class="crement plus noselect">▲</button>
                <button class="crement minus noselect">▼</button>
              </div>
            </div>
            <div class="number_wrapper">
              <input type="number" value="158" max="255" min="0" class="input number rgb b">
              <div class="crement_buttons small">
                <button class="crement plus noselect">▲</button>
                <button class="crement minus noselect">▼</button>
              </div>
            </div>
          </div>
          <span class="input_header">Color value in R, G, B</span>
        </div>
        <div class="input_box colors hex">
          <input type="text" value="#17469E" class="input text" minlength="4" maxlength="7" size="7" pattern="#[\dA-Fa-f]{3}|#[\dA-Fa-f]{6}">
          <span class="input_header">Color in HEX</span>
        </div>
        <div class="input_box dimensions">
          <div class="box_wrapper size">
            <div class="number_wrapper">
              <input type="number" value="50" class="input number" min="1">
              <div class="crement_buttons">
                <button class="crement plus noselect">▲</button>
                <button class="crement minus noselect">▼</button>
              </div>
            </div>
            <span class="input_header">Triangle Size</span>
          </div>
        </div>
        <div class="input_box button">
          <button class="input" onclick="generate();">Regenerate</button>
        </div>
        <div id="slider_lightness"></div>
        <div id="slider_threshold"></div>
        <div class="input_box lines checker">
          <div class="input checker" onclick="toggleLines();">
            <div class="checkmark">
              <span class="mark lower"></span>
              <span class="mark upper"></span>
            </div>
          </div>
          <span class="input_header">Line mode</span>
        </div>
        <div class="input_box legacy checker">
          <div class="input checker" onclick="toggleLegacy();">
            <div class="checkmark">
              <span class="mark lower"></span>
              <span class="mark upper"></span>
            </div>
          </div>
          <span class="input_header">Legacy system</span>
        </div>
        <div class="input_box button">
          <button class="input" onclick="resetProperties();">Reset values</button>
        </div>
        <div class="input_box button">
          <button type="button" class="input" onclick="getParamLink()">Copy value link</button>
        </div>
        <div class="input_box button ref download_canvas">
          <a class="input" download="triangles.png" onclick="downloadCanvas()">Download image</a>
        </div>
      </div>
      <div class="info_flag">
        <a href="../" class="mainref">Hallo89</a>
      </div>
    </div>

    <div class="tooltips">
      <div class="tip_wrapper tip_legacy">
        <div class="tip_inner">
          <div class="tip_text tip_header">Legacy system</div>
          <div class="tip_text tip_description">The program used prior to v2.0. Although it will be more inperformant, the current system is very stressful for bad GPUs, leading to poor results.</div>
        </div>
      </div>
    </div>

    <div class="alert_wrapper" id="size_alert">
      <div class="alert">
        <p class="text caption">Legacy mode is enabled</p>
        <p class="text header">A large quantity of triangles is set to generate</p>
        <p class="text info">While this has no significant negative effects, it can take pretty long</p>
        <div class="buttons">
          <button class="yes" onclick="hideWarning(); setTimeout(function(){run()}, 20);">Go!</button>
          <button class="abort" onclick="hideWarning();">Nevermind</button>
        </div>
      </div>
    </div>

    <canvas width="800" height="800"></canvas>

    <link rel="stylesheet" href="https://hallo89.github.io/Slider89/slider89.css">
    <script src="https://hallo89.github.io/Slider89/slider89.js"></script>
    <script>
      const preserveBuffer = true;
    </script>
    <script src="/js/graphics/webGL2SupportCheck.js"></script>
    <script src="/js/graphics/GLBoiler.js"></script>
    <script src="/js/graphics/webgl/base.js"></script>
    <script src="/js/graphics/webgl/triangles/index.js"></script>
    <script src="/js/graphics/webgl/triangles/gl.js"></script>
    <script src="/js/graphics/webgl/triangles/ui.js"></script>
    <script>
      const inputColor = document.querySelector('.input_box.colorpicker .input');
      const inputsRGB = document.querySelectorAll('.input_box.rgb .input');
      const inputHEX = document.querySelector('.input_box.hex .input');
      const inputSize = document.querySelector('.box_wrapper.size .input');
      const inputLines = document.querySelector('.input_box.lines');
      const inputLegacy = document.querySelector('.input_box.legacy');
      const inputDownload = document.querySelector('.input_box.download_canvas .input');

      const sizeAlert = document.getElementById('size_alert');
      const tipLegacy = document.querySelector('.tooltips .tip_legacy');
      const expander = document.querySelector('.inputs_expander');

      inputColor.addEventListener('input', pickerChange);
      inputHEX.addEventListener('input', hexChange);
      for (let i = 0; i < inputsRGB.length; i++) {
        inputsRGB[i].addEventListener('input', rgbChange);
      }

      resizeCanvas();
      computeSizes();

      slider89.defaultValues({
        trimComma: false,
        task: function() {
          draw(true);
        },
        comma: 1,
        width: 145,
        classList: ['input_box'],
        replaceNode: true
      });
      const sliderLightness = new Slider89(document.getElementById('slider_lightness'), {
        value: defaultProps.lightness,
        caption: 'Lightness start'
      });
      const sliderThreshold = new Slider89(document.getElementById('slider_threshold'), {
        value: defaultProps.threshold,
        caption: 'Lightness threshold'
      });

      handleSearchParams();
      generate();
    </script>
  </body>
</html>
