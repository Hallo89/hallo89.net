body {
  margin: 0;
  font-family: Arial, sans-serif;
  font-size: 19px;
  animation: clipin .4s cubic-bezier(.4, .15, .7, 1);
}
@keyframes clipin {
  from { clip-path: polygon(0 -32px, 0 -30px, 0 -32px); }
  to   { clip-path: polygon(0 -32px, 0 202%, 202% -32px); }
}
body.fullscreen {
  animation: clipinfull .5s cubic-bezier(.7, .1, .65, .9);
}
@keyframes clipinfull {
  0%   { clip-path: polygon(100vw 100vh, -100% 100vh, 100vw -100%); }
  50%  { clip-path: polygon(100vw 100vh, 100vw 100vh, 100vw 100vh); }
  100% { clip-path: polygon(100vw 100vh, -100% 100vh, 100vw -100%); }
}

body.closing #wrapper {
  width: 0;
  animation: windowOut .4s cubic-bezier(.25, 0, .4, .95) !important;
}
@keyframes windowOut {
  0% { width: 80vw; }
  30% { width: 81.7vw; }
  90% { width: 0; }
  100% { width: 0; }
}
body.closing .input_container {
  flex-wrap: nowrap;
}
body.fullscreen.closing #wrapper {
  clip-path: polygon(100vw 100vh, 100vw 100vh, 100vw 100vh);
  animation: fullscreenOut .4s cubic-bezier(.25, .05, .1, 1) !important;
}
@keyframes fullscreenOut {
  0%   { clip-path: polygon(100vw 100vh, -100% 100vh, 100vw -100%); }
  90%  { clip-path: polygon(100vw 100vh, 100vw 100vh, 100vw 100vh); }
  100% { clip-path: polygon(100vw 100vh, 100vw 100vh, 100vw 100vh); }
}

body:not(.fullscreen) #wrapper {
  margin: 32px auto;
  height: calc(100vh - 64px);
  width: 80vw;
  animation: widthin .57s cubic-bezier(.3, .1, .4, 1);
}
@keyframes widthin {
  0% { width: 77.3vw; }
  45% { width: 80.64vw; }
  100% { width: 80vw; }
}
body.fullscreen #wrapper {
  margin: 0;
  height: 100vh;
  width: 100vw;
}
body.delayfull #wrapper {
  animation: .25s fullscreenDelay linear;
}
@keyframes fullscreenDelay {
  from { margin: 32px auto; height: calc(100vh - 64px); width: 80vw; }
  to   { margin: 32px auto; height: calc(100vh - 64px); width: 80vw; }
}

.utility_buttons {
  height: 100%;
  display: flex;
  align-items: center;
  margin-right: 12px;
  opacity: .8;
}
.utility_buttons .util_button {
  border: 10px solid;
  margin: 0 5px;
  border-radius: 100%;
  cursor: pointer;
  transition: all .2s, clip-path .08s cubic-bezier(.15, 0, .8, 1);
}
@supports (clip-path: circle(10px)) {
  .utility_buttons .util_button {
      border: 12px solid;
      margin: 0 3px;
      clip-path: circle(10px);
  }
  .utility_buttons .util_button:not(.active):hover {
    clip-path: circle(12px);
  }
}
.utility_buttons .util_button.active {
  cursor: auto;
}
.utility_buttons .button_smallscreen {
  border-color: hsl(0, 0%, 28%);
}
.utility_buttons .button_fullscreen {
  border-color: hsl(0, 0%, 25%);
}
.utility_buttons .button_close {
  border-color: hsl(0, 0%, 22%);
}
.utility_buttons .button_smallscreen:hover {
  border-color: #20806A;
}
.utility_buttons .button_fullscreen:hover {
  border-color: #945F3C;
}
.utility_buttons .button_close:hover {
  border-color: #904851;
}
/* Colors from above mixed with 140/255 the base color from even more above */
.utility_buttons .button_smallscreen.active:hover {
  border-color: #356056;
}
.utility_buttons .button_fullscreen.active:hover {
  border-color: #654D3D;
}
.utility_buttons .button_close.active:hover {
  border-color: #5F3F43;
}

.box {
  height: 100%;
  box-shadow: 4px 8px 45px hsla(0, 0%, 6%, 0.5);
  border-top: 8px solid hsl(0, 0%, 22.5%);
  border-bottom: 6px solid hsl(0, 0%, 10%);
  box-sizing: border-box;
}

.box_header {
  display: flex;
  flex-flow: row;
  justify-content: space-between;
  align-items: center;
}

.box .header_text {
  font-size: 28px;
}

/* Compact input_container mode: header, utility buttons and inputs in one line */

.input_container.compactor {
  justify-content: space-between;
  align-items: flex-start;
  flex-wrap: nowrap;
}
.input_container.compactor .input_container {
  padding: 0;
  margin-bottom: 0;
}
.compact_container {
  display: flex;
}
.utility_buttons.compact {
  height: 66px;
  margin-right: 7px;
  margin-left: 5px;
}
.box_header.compact .header_text {
  padding: 33px 15px;
  white-space: nowrap;
}


/* various styles for various text formatting methods */
/* General wrapper of a text output */
.text_function {
  font-size: .6em;
  color: hsl(0, 0%, 75%);
  display: flex;
}
.text_box {
  padding: 5px 10px;
  overflow: auto;
  display: flex;
  align-items: flex-start;
  align-content: flex-start;
  justify-content: center;
  flex-wrap: wrap;
  word-wrap: break-word;
}
.text_content {
  display: block;
  font-size: .65em;
  line-height: 1.4;
  white-space: pre-wrap;
  -webkit-user-select: all;
  -moz-user-select: all;
  -ms-user-select: all;
  user-select: all;
}
/* The input box being a 100% width <textarea> input box */
.input_box.text_input {
  width: 100%;
}
/* The 100% width textarea. */
.input.text {
  resize: none;
  font-size: 20px;
  font-family: sans-serif;
  min-height: 48px;
  margin: 0;
}

/* A thing to make the functions bearable without grid (absolute erf) */

.one_input_container {
  top: 151px; /* 76px header + 75px last (and first) input_box (-> without margin) */
}

/* The container for every input every (The big line they are in) */

.input_container {
  display: flex;
  flex-wrap: wrap;
  font-family: Calibri, Arial, sans-serif;
  font-size: 18.5px;
  padding: 5px 5px 7px;
  margin-bottom: 1px;
  background-color: hsl(0, 0%, 14%);
}
.input_container.uncrucial {
  margin: 0;
}

/* The very global style for every input ever */
 /* The very global style for the wrapping of every input ever */
.input_box .input_header {
  margin-bottom: 3px;
  color: hsl(0, 0%, 70%);
}
.input_box {
  position: relative;
  margin: 0 7px;
  display: flex;
  flex-direction: column;
  min-width: 150px;
  padding: 8px;
}
 /* The very global style for every input ever now for real */
.input {
  font-size: .81em;
  border: none;
  box-shadow: 0 1px 7px hsla(0, 0%, 14%, .82);
  background-color: hsl(0, 0%, 23%);
  color: hsl(0, 0%, 77%);
  border-radius: 2px;
  padding: 3px 6px;
  height: 18px;
  width: auto;
}
 /* The very global style for every input ever (The one with knobs okay) */
.knobber {
  position: relative;
  cursor: pointer;
}
.knobber .knob {
  position: absolute;
  left: 6px;
  height: 18px;
  width: 18px;
  box-shadow: 0 1px 5px hsla(0, 0%, 21%, .8);
  background-color: hsl(0, 0%, 13%);
  border-radius: 100%;
  transition: all .3s ease;
  z-index: 1;
}

/* The toggle input */

.toggle.active .knob {
  transform: translate(120px);
  background-color: hsl(0, 0%, 41%);
}

/* The one-line text input */

.input.chars {
  max-width: 150px;
}

/* The number input with its specific (very fancy) change-number buttons */

.input.number {
  padding: 3px 0 3px 6px;
}
.input_number_container {
  position: relative;
}
.change_number {
  position: absolute;
  right: 0px;
  height: 12px;
  width: 20px;
  line-height: 12px;
  font-size: .6em;
  text-align: center;
  color: hsl(0, 0%, 63%);
  background-color: hsl(0, 0%, 32%);
  cursor: pointer;
}
.change_number.increment {
  top: 0;
  border-top-right-radius: 2px;
}
.change_number.decrement {
  bottom: 0;
  border-bottom-right-radius: 2px;
}
/* Remove the default browser-side style */
.input.number {
  max-width: 150px;
  -moz-appearance: textfield;
  appearance: textfield;
}
input.number::-webkit-inner-spin-button,
input.number::-webkit-outer-spin-button {
   -webkit-appearance: none;
    margin: 0;
}

/* The file input */

.input.file { /* input[type=file] label */
  cursor: pointer;
  padding-right: 6px;
  font-family: 'Consolas', 'Courier New', 'Courier', monospace;
}
.input_file { /* input[type=file] */
  display: none;
}

/* The button input */

.button {
  cursor: pointer;
  justify-content: center;
  align-items: center;
  padding: 12px 8px 8px;
}

/* The multiple-choice input */

.multiple .input {
  padding: 0;
  height: 24px;
}
.multiple .knob {
  top: 3px;
  left: 14px;
}
.multiple .mark_container {
  height: 100%;
  display: flex;
}
.multiple .marker {
  min-width: 46px;
  padding: 3px 0;
  display: flex;
  justify-content: center;
  transition: all .3s;
}
.multiple .mark {
  width: 11px;
  background-color: hsl(0, 0%, 35%);
  border-radius: 2px;
  opacity: 1;
}
.currentchoice {
  opacity: 0 !important;
}
.color_mark_none {
  color: hsl(0, 0%, 45%);
}

/* Slider89 */

.input.slider .slider_knob {
  background-color: hsl(0, 0%, 38%);
  border-radius: 2px;
}
.input.slider, .input.slider .slider_knob, .input.slider .slider_tooltip {
  height: 24px;
}
.input.slider .slider_tooltip {
  color: hsl(0, 0%, 55%);
  font-size: 1.05em;
}

/* Tooltips */

.tipper .tooltip {
  position: absolute;
  color: hsl(0, 0%, 62%);
  white-space: nowrap;
  background-color: hsl(0, 0%, 6%);
  padding: 3px 18px;
  z-index: 5;

  visibility: hidden;
  opacity: 0;
  transition: all .12s;
}
.tipper .tooltip::before {
  content: '';
  position: absolute;
  left: 30px;
  border: solid 7px hsl(0, 0%, 6%);
  transform: rotate(45deg);
  z-index: -1;
}
.tipper .tooltip.default {
  bottom: -26px;
  left: 8px;
}
.tipper .tooltip.default::before {
  top: -6px;
}
.tipper .tooltip.multiple_tip {
  top: -2px;
  left: -15px;
  border-radius: 4px;
  padding: 3px 10px;
  opacity: 0;
}
.tipper .tooltip.multiple_tip::before {
  bottom: -7px;
  left: 35px;
}
.tipper:hover .tooltip.multiple_tip, .tipper.active_tip .tooltip.default {
  visibility: visible;
  opacity: 1;
}

/* Ultra-global values, being classes */

.nodisplay {
  display: none !important;
}
.noselect {
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}
.centerflex {
  display: flex;
  align-items: center;
  justify-content: center;
}
